name: Stage

concurrency: stage

on:
  workflow_dispatch:

jobs:

  version:
    runs-on: ubuntu-latest
    steps:
      - if: github.ref != 'refs/heads/main'
        run: exit 1
      - uses: actions/checkout@v4
      - id: version
        run: |
          DATE="$(git show -s --format=%ci $HASH | cut -c1-10)"
          HASH="$(git rev-parse --short HEAD)"
          VERSION="v$DATE.$HASH"
          echo "tag_name=$VERSION" >> "$GITHUB_OUTPUT"
    outputs:
      tag_name: ${{ steps.version.outputs.tag_name }}

  verify:
    needs: version
    uses: ./.github/workflows/verify.yml

  tag:
    runs-on: ubuntu-latest
    needs: [ version, verify ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: tag
        id: tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.version.outputs.tag_name }}
        run: |
          git config --global user.name "Adam McKee"
          git config --global user.email "adam.be.g84d@gmail.com"
          git tag $TAG_NAME
          git push $TAG_NAME
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
    outputs:
      tag_name: ${{ steps.tag.outputs.tag_name }}

  release:
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: www.zip
          path: www.zip
      - env:
          TAG_NAME: ${{ needs.tag.outputs.tag_name }}
        run: |
          CREATED_RELEASE=$(gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/eighty4/picking-playmate/releases \
            -f tag_name="$TAG_NAME" \
            -f name="$TAG_NAME" \
            -f body="https://www.youtube.com/watch?v=GNEzg5pRJzA" \
            -F draft=false \
            -F prerelease=false \
            -F generate_release_notes=false)
          RELEASE_ID=$(echo $CREATED_RELEASE | jq '.id')
          UPLOAD_HOSTNAME=$(echo $CREATED_RELEASE | jq '.upload_url' | cut -d'/' -f3)
          curl --fail --silent -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: $(file www.zip -b --mime-type)" \
            https://$UPLOAD_HOSTNAME/repos/eighty4/install.sh/releases/$RELEASE_ID/assets?name=www.zip \
            --data-binary "@www.zip"
    outputs:
      tag_name: ${{ steps.tag.outputs.tag_name }}

  deploy:
    needs: release
    permissions:
      contents: read
      deployments: write
    uses: ./.github/workflows/deploy.yml
    with:
      cloudflare_env: stage
      release_version: ${{ needs.release.outputs.tag_name }}
    secrets: inherit
